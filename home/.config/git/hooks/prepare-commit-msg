#!/usr/bin/env python
import re
import sys
from subprocess import run

try:
    commit_msg_file = sys.argv[1]
    commit_type = sys.argv[2] if len(sys.argv) > 2 else ""
    commit_hash = sys.argv[3] if len(sys.argv) > 3 else ""

    # message (-m), template (-t), merge, squash, commit (-c)
    if commit_type not in ("", "message"):
        sys.exit(0)

    cmd = ["git", "symbolic-ref", "--short", "HEAD"]
    proc = run(cmd, check=False, text=True, capture_output=True)

    if proc.returncode != 0:
        # Process may fail in a rebase
        sys.exit(0)

    branch = (proc.stdout or "").strip()
    prefixes = [
        "",  # Nothing
        "bugfix/",
        "feature/",
        "hotfix/",
        "integration/",
        "release/",
    ]
    prefix = "(" + "|".join(prefixes) + ")"
    match = re.match(f"^{prefix}([A-Z0-9]+-[0-9]+).*", branch)

    if match and len(match.groups()) >= 2:
        ticket = match[2]

        with open(commit_msg_file, "r+", encoding="utf-8") as f:
            message = f.read()
            if not message.startswith(ticket):
                f.seek(0, 0)
                f.write(f"{ticket} {message}")
                if commit_type != "":
                    print(f'{__file__}: Prepended ticket "{ticket}"')
except:
    sys.exit(0)
