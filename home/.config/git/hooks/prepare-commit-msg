#!/usr/bin/env python
import re
import sys
from subprocess import run

commit_msg_file = sys.argv[1]
commit_type = sys.argv[2] if len(sys.argv) > 2 else ""
commit_hash = sys.argv[3] if len(sys.argv) > 3 else ""

# message (-m), template (-t), merge, squash, commit (-c)
if commit_type not in ("", "message"):
    sys.exit(0)

cmd = ["git", "symbolic-ref", "--short", "HEAD"]
branch = (run(cmd, check=True, text=True, capture_output=True).stdout or "").strip()
match = re.match("^(feature|bugfix)/([A-Z0-9]+-[0-9]+).*", branch)

if match and len(match.groups()) >= 2:
    ticket = match[2]

    with open(commit_msg_file, "r+", encoding="utf-8") as f:
        message = f.read()
        if not message.startswith(ticket):
            f.seek(0, 0)
            f.write(f"{ticket} {message}")
            if commit_type != "":
                print(f'{__file__}: Prepended ticket "{ticket}"')
